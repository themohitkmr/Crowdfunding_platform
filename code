const express = require('express');
const mongoose = require('mongoose');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;

// MongoDB connection
mongoose.connect('mongodb://localhost/crowdfunding', { useNewUrlParser: true, useUnifiedTopology: true });

// Middleware
app.use(express.json());
app.use(express.static(path.join(__dirname, 'public')));

// Project Model
const projectSchema = new mongoose.Schema({
    title: String,
    description: String,
    goal: Number,
    raised: { type: Number, default: 0 },
    endDate: Date,
});

const Project = mongoose.model('Project', projectSchema);

// API Routes
app.post('/api/projects', async (req, res) => {
    const project = new Project(req.body);
    await project.save();
    res.status(201).send(project);
});

app.get('/api/projects', async (req, res) => {
    const projects = await Project.find();
    res.send(projects);
});

// Serve HTML
app.get('/', (req, res) => {
    res.send(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="styles.css">
        <title>Crowdfunding Platform</title>
    </head>
    <body>
        <h1>Crowdfunding Projects</h1>
        <form id="project-form">
            <input type="text" id="title" placeholder="Project Title" required>
            <input type="text" id="description" placeholder="Description" required>
            <input type="number" id="goal" placeholder="Funding Goal" required>
            <input type="date" id="endDate" required>
            <button type="submit">Create Project</button>
        </form>
        <div id="projects"></div>
        <script>
            document.getElementById('project-form').addEventListener('submit', async (e) => {
                e.preventDefault();
                const title = document.getElementById('title').value;
                const description = document.getElementById('description').value;
                const goal = document.getElementById('goal').value;
                const endDate = document.getElementById('endDate').value;

                const response = await fetch('/api/projects', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ title, description, goal, endDate }),
                });

                if (response.ok) {
                    loadProjects();
                    document.getElementById('project-form').reset();
                }
            });

            async function loadProjects() {
                const response = await fetch('/api/projects');
                const projects = await response.json();
                const projectsDiv = document.getElementById('projects');
                projectsDiv.innerHTML = '';

                projects.forEach(project => {
                    projectsDiv.innerHTML += \`<div>
                        <h3>\${project.title}</h3>
                        <p>\${project.description}</p>
                        <p>Goal: $ \${project.goal} - Raised: $ \${project.raised}</p>
                        <p>Ends on: \${new Date(project.endDate).toLocaleDateString()}</p>
                    </div>\`;
                });
            }

            loadProjects();
        </script>
        <style>
            body {
                font-family: Arial, sans-serif;
            }

            form {
                margin-bottom: 20px;
            }

            #projects {
                margin-top: 20px;
            }
        </style>
    </body>
    </html>
    `);
});

// Start Server
app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
});
